from Config import TRAIN_MALWARE_PATH,TRAIN_NON_MALWARE_PATH
import Classifier
import Utils
import FeatureExtraction
import Statistics
import ExecutablePreprocess
from sys import argv
from os import system,name
from time import clock
import logging
import os, sys

DIR_TO_PREDICT = "./Predicts/"
MALW_PATH = "./Train/Malw"
NOMALW_PATH = "./Train/NoMalw"
PROTOTYPE = "prototypes.trained"
MODEL = "model_w2v.mm"
FUNCTIONS = "ffunctions.mm"

def report(fname,cl,t):
	return """
*********** REPORT ***********
File:  %s
Class: %s
Time:  %d
""" % (fname,cl,t)

class WMD:
		
	def train(self):
		return Classifier._fit(MALW_PATH, NOMALW_PATH, PROTOTYPE, MODEL, FUNCTIONS)
	
	def predict(self):
		files = os.listdir(DIR_TO_PREDICT)
		result = []
		for f in files:
			it = clock()
			c_class = Classifier._predict(DIR_TO_PREDICT+f, 1, PROTOTYPE, MODEL, FUNCTIONS)
			result.append(report(f, c_class, clock()-it))
			
		return result

	def stats(self):
		return Statistics._leaving_one_out(MALW_PATH,NOMALW_PATH,1)


#print WMD().train()
#print WMD().predict()
#print WMD().stats()
