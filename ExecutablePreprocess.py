#!/usr/bin/env python
# -*- coding: utf-8 -*-

from pydasm import get_instruction,get_instruction_string,MODE_32,FORMAT_INTEL
from math import sqrt

def _get_imports(pe): 
	""" Extrae las funciones de las que hace uso el programa. 
		Devuelve el conjunto de funciones.

		Parámetros:
		pe      		   -- Objeto de pefile con el programa abierto.

		Excepciones:
		A implementar
    """
	imports = []
	for entry in pe.DIRECTORY_ENTRY_IMPORT:
		for imp in entry.imports: imports.append(imp.name)
	return imports


def _is_packed(pe):
	""" Extrae la medida de empaquetamiento del programa. 
		Para tener una medida que permita determinar si un programa está empaquetado se tiene en cuenta actualmente:
		  · Entropía
		  · UPX
		  · ASPACK
		Devuelve la medida de empaquetamiento que se define como:
		sqrt(entropia^2 + {1 si hay una sección upx, 0 e.c.o.c}^2 + {1 si hay una sección aspack, 0 e.c.o.c}^2)

		Parámetros:
		pe      		   -- Objeto de pefile con el programa abierto.

		Excepciones:
		A implementar
    """
	def _entropy():  return sum([sec.get_entropy() for sec in pe.sections])
			
	def _upx():     
		for section in pe.sections:
			if "upx" in section.Name.lower(): return 1
		return 0
		
	def _aspack(): 
		for section in pe.sections:
			if "aspack" in section.Name.lower(): return 1
		return 0
	
	return sqrt(_entropy()**2+_upx()**2+_aspack()**2)


def _get_instructions(pe):
	""" Extrae la representación textual de las instrucciones del programa
	
		Devuelve el conjunto de instrucciones. 

		Parámetros:
		pe      		   -- Objeto de pefile con el programa abierto.

		Excepciones:
		A implementar
    """
	entry_point = pe.OPTIONAL_HEADER.AddressOfEntryPoint
	ep_ava = entry_point
	data = pe.get_memory_mapped_image()[entry_point:entry_point+pe.OPTIONAL_HEADER.SizeOfCode]
	offset,instructions = 0,set()
	while offset<len(data):
		instruction = get_instruction(data[offset:],MODE_32)
		if instruction==None: break
		else:
			instructions.add(get_instruction_string(instruction,FORMAT_INTEL,ep_ava+offset))
			offset += instruction.length
	return list(instructions)
